@model TestNotebook.Models.Header

@{
    ViewBag.Title = "Details";
}

<div class="container">
    <h1>Header</h1>
    <h5>@Html.DisplayNameFor(model => model.Title)</h5>
    <h6 class="text-muted">@Html.DisplayFor(model => model.Title)</h6>
    <h4>Details</h4>
    <div class="card">
        <div class="card-body">
            <p>
                @Html.ActionLink("Create Detail", "Create","Detail", new {@headerid=Model.Id}, new {@class="btn btn-primary"})
            </p>
            <p class="card-text">
            <table class="table table-striped table-bordered">
                <tr>
                    <th>
                        Screen
                    </th>
                    <th>
                        Field
                    </th>
                    <th>
                        Control
                    </th>
                    <th>
                        Question
                    </th>
                    <th>
                        Answer Yes/No
                    </th>
                    <th>
                        Observation
                    </th>
                    <th>Result</th>
                    <th>Action</th>                    
                </tr>
                    @foreach (var item in (List<Detail>)ViewBag.DetailsList)
                    {
                    <tr>
                        <td>
                                @Html.DisplayFor(modelItem => item.Field.Screen.Name)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.Field.Name)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.Question.Control.Name)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.Question.Description)
                        </td>
                        <td>
                                @if(item.AnswerYN == true){
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="@item.Id" id="inlineRadio1"
                                            value="yes" checked = "checked" disabled = "true"> Yes
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="@item.Id" id="inlineRadio2"
                                            value="no" disabled="true"> No
                                    </div>
                                }else{
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="@item.Id" id="inlineRadio1"
                                            value="yes" disabled = "true"> Yes
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" name="@item.Id" id="inlineRadio2"
                                            value="no" checked = "checked" disabled="true"> No
                                    </div>
                                }
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.AnswerText)
                        </td>
                        <td>
                                @Html.DisplayFor(modelItem => item.Result.description)
                        </td>                        
                        <td>
                            <div class="btn-group">
                                    @Html.ActionLink("Edit", "Edit", "Detail", new { @id=item.Id, @headerid=Model.Id }, new {@class="btn btn-primary"})
                                    @Html.ActionLink("Details", "Details", "Detail", new { @id=item.Id, @headerid=Model.Id }, new {@class="btn btn-primary"})
                                    @Html.ActionLink("Delete", "Delete", "Detail", new { @id=item.Id, @headerid=Model.Id }, new {@class="btn btn-primary"})
                            </div>
                        </td>
                    </tr>
                    }
            </table>
            </p>            
        </div>        
    </div>
    <br/>
    <div class="btn-group">
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new {@class="btn btn-primary"})
        @Html.ActionLink("Back to List", "Index",new {}, new {@class="btn btn-primary"})
    </div>
</div>